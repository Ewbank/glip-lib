TEXTURE_FORMAT:format(512,256,GL_RGBA32F,GL_FLOAT,GL_NEAREST,GL_NEAREST);

SHADER_SOURCE:shader()
{
	#version 130
	precision mediump float;

	uniform sampler2D 	inText;
	out     vec4 		outText;

	void main()
	{
		const int 	w = 512,
				h = 256;
		int 	x = int(gl_TexCoord[0].s*w),
			y = int(gl_TexCoord[0].t*h);

		if(x<w/2) x = x+w/2;
		else      x = x-w/2;
		if(y<h/2) y = y+h/2;
		else      y = y-h/2;

		vec4 	col = texelFetch(inText, ivec2(x,y), 0);

		outText.rg = col.rg;
		outText.a = 1.0;
	}
}

FILTER_LAYOUT:filter(format,shader);

PIPELINE_MAIN:pMain()
{
	INPUT_PORTS(i0);
	OUTPUT_PORTS(o0);
	FILTER_INSTANCE:inst_filter(filter);
	CONNECTION(THIS,i0,inst_filter,inText);
	CONNECTION(inst_filter,outText,THIS,o0);
}

