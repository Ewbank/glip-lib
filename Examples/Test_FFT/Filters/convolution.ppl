TEXTURE_FORMAT:format(512,512,GL_RGBA32F,GL_FLOAT,GL_NEAREST,GL_NEAREST);

SHADER_SOURCE:shader()
{
	#version 130

	uniform sampler2D 	inText;
	out     vec4 		outText;

	void main()
	{
		const float pi = 3.141592;
		vec4 	col = textureLod(inText, gl_TexCoord[0].st, 0);

		/*float	kx = cos(pi*gl_TexCoord[0].s),
			ky = cos(pi*gl_TexCoord[0].t);*/

		float	kx = sin(pi*gl_TexCoord[0].s),
			ky = sin(pi*gl_TexCoord[0].t);

		kx = pow(kx,2.0);
		ky = pow(ky,2.0);

		outText.rg = col.rg*kx*ky;
		outText.a = 1.0;
	}
}

FILTER_LAYOUT:filter(format,shader);

PIPELINE_MAIN:pMain()
{
	INPUT_PORTS(i0);
	OUTPUT_PORTS(o0);
	FILTER_INSTANCE:inst_filter(filter);
	CONNECTION(THIS,i0,inst_filter,inText);
	CONNECTION(inst_filter,outText,THIS,o0);
}

