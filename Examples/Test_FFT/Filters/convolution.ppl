REQUIRED_FORMAT:format();

SHADER_SOURCE:shader()
{
	#version 130

	uniform sampler2D 	inText;
	out     vec4 		outText;

	void main()
	{
		const float pi = 3.141592;
		vec4 	col = textureLod(inText, gl_TexCoord[0].st, 0);

		/*float	kx = cos(pi*gl_TexCoord[0].s),
			ky = cos(pi*gl_TexCoord[0].t);*/

		float	kx = sin(pi*gl_TexCoord[0].s),
			ky = sin(pi*gl_TexCoord[0].t);

		kx = pow(kx,128.0);
		ky = pow(ky,128.0);

		outText.rg = col.rg*kx*ky*5.0;
		outText.a = 1.0;
	}
}

FILTER_LAYOUT:filter(format,shader);

PIPELINE_MAIN:pMain()
{
	INPUT_PORTS(inText);
	OUTPUT_PORTS(outText);
	FILTER_INSTANCE:inst_filter(filter);
}

