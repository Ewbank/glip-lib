/* Old :
TEXTURE_FORMAT:format(256,256,GL_RGBA32F,GL_FLOAT,GL_NEAREST,GL_NEAREST);
*/

TEXTURE_FORMAT:format(256,256,GL_RGB,GL_UNSIGNED_BYTE,GL_NEAREST,GL_NEAREST,GL_REPEAT,GL_REPEAT)

SHADER_SOURCE:shader()
{
	#version 130

	uniform sampler2D 	inText;
	out     vec4 		outText;

	// Possible variable : 
	uniform vec2 	translation	= vec2(0.0, 0.0);
	uniform float 	scaleCoeff	= 1.0;

	void main()
	{
		vec4 col = textureLod(inText, (gl_TexCoord[0].st-translation)*scaleCoeff, 0);

		outText.r = col.r;
		outText.g = col.g;
		outText.b = col.b;
		outText.a = col.a;
	}
}

FILTER_LAYOUT:filter(format,shader)

PIPELINE_MAIN:pMain
{
	INPUT_PORTS(i0)
	OUTPUT_PORTS(o0)
	FILTER_INSTANCE:inst_filter(filter)
	CONNECTION(THIS,i0,inst_filter,inText)
	CONNECTION(inst_filter,outText,THIS,o0)
}

