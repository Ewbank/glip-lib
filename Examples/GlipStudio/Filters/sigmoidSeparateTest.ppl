REQUIRED_FORMAT:mainFmt(inputTexture)

INCLUDE_FILE(histogram.ppl)

SHADER_SOURCE:sigmoidShader
{
	#version 130

	uniform sampler2D inputTexture;
	out vec4 outputTexture;

	uniform vec3 	center 	= vec3(0.5f, 0.5f, 0.5f), 
			scale 	= vec3(0.1f, 0.1f, 0.1f);

	void main()
	{
		vec2 pos 	= gl_TexCoord[0].st;
		vec4 col	= textureLod(inputTexture,  pos, 0);

		outputTexture.rgb	= 1.0f / (1.0f + exp(-(col.rgb-center)/scale));
	}
}

FILTER_LAYOUT:sigmoidFilter(mainFmt, sigmoidShader)

PIPELINE_MAIN:sigmoidSeparatePipeline
{
	INPUT_PORTS(inputTexture)
	//OUTPUT_PORTS(outputTexture, histogramBins, histogramShow)
	OUTPUT_PORTS(outputTexture, histogramShow)

	FILTER_INSTANCE:sigmoid(sigmoidFilter)
	PIPELINE_INSTANCE:histogram(pipelineHistogram)

	CONNECTION(THIS, inputTexture, sigmoid, *)
	CONNECTION(sigmoid, *, THIS, outputTexture)

	CONNECTION(sigmoid, *, histogram, *)
	//CONNECTION(histogram, histogramBins, THIS, histogramBins)
	CONNECTION(histogram, outputTexture, THIS, histogramShow)
}
