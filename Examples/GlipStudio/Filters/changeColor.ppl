REQUIRED_FORMAT:fmt(FormatIn_0)

INCLUDE_FILE(colors.ppl)

SHADER_SOURCE:changeColor
{
	#version 130
	
	uniform sampler2D inputTexture;
	out vec4 outputTexture;
	
	uniform float 	saturationScal = 1.0f,
			intensityScal = 1.0f;

	INCLUDE_SHARED_SOURCE:ColorPrimitives
	
	void main()
	{
		// The current fragment position : 
		vec2 pos = gl_TexCoord[0].st;
		// Read the base level of the texture at the current position : 
		vec4 col = textureLod( inputTexture, pos, 0);
	
		vec3 hsv;
		RGBToHSV( col.rgb, hsv );

		hsv.y *= saturationScal;
		hsv.z *= intensityScal;
		
		HSVToRGB( hsv, col.rgb );

		outputTexture = col;
	}
}

FILTER_LAYOUT: changeColorFilter ( fmt, changeColor)

PIPELINE_MAIN: changeColorPipeline
{
	INPUT_PORTS( inputTexture )
	OUTPUT_PORTS( outputTexture )

	FILTER_INSTANCE: changeColorFilter ( changeColorFilter )
}
