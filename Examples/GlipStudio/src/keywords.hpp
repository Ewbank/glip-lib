#ifndef __GLIPSTUDIO_KEYWORDS__
#define __GLIPSTUDIO_KEYWORDS__

	enum GLSL_KEYWORD
	{
		GLSL_KW_attribute,
		GLSL_KW_const,
		GLSL_KW_uniform,
		GLSL_KW_varying,
		GLSL_KW_layout,
		GLSL_KW_centroid,
		GLSL_KW_flat,
		GLSL_KW_smooth,
		GLSL_KW_noperspective,
		GLSL_KW_patch,
		GLSL_KW_sample,
		GLSL_KW_break,
		GLSL_KW_continue,
		GLSL_KW_do,
		GLSL_KW_for,
		GLSL_KW_while,
		GLSL_KW_switch,
		GLSL_KW_case,
		GLSL_KW_default,
		GLSL_KW_if,
		GLSL_KW_else,
		GLSL_KW_subroutine,
		GLSL_KW_in,
		GLSL_KW_out,
		GLSL_KW_inout,
		GLSL_KW_float,
		GLSL_KW_double,
		GLSL_KW_int,
		GLSL_KW_void,
		GLSL_KW_bool,
		GLSL_KW_true,
		GLSL_KW_false,
		GLSL_KW_invariant,
		GLSL_KW_discard,
		GLSL_KW_return,
		GLSL_KW_mat2,
		GLSL_KW_mat3,
		GLSL_KW_mat4,
		GLSL_KW_dmat2,
		GLSL_KW_dmat3,
		GLSL_KW_dmat4,
		GLSL_KW_mat2x2,
		GLSL_KW_mat2x3,
		GLSL_KW_mat2x4,
		GLSL_KW_dmat2x2,
		GLSL_KW_dmat2x3,
		GLSL_KW_dmat2x4,
		GLSL_KW_mat3x2,
		GLSL_KW_mat3x3,
		GLSL_KW_mat3x4,
		GLSL_KW_dmat3x2,
		GLSL_KW_dmat3x3,
		GLSL_KW_dmat3x4,
		GLSL_KW_mat4x2,
		GLSL_KW_mat4x3,
		GLSL_KW_mat4x4,
		GLSL_KW_dmat4x2,
		GLSL_KW_dmat4x3,
		GLSL_KW_dmat4x4,
		GLSL_KW_vec2,
		GLSL_KW_vec3,
		GLSL_KW_vec4,
		GLSL_KW_ivec2,
		GLSL_KW_ivec3,
		GLSL_KW_ivec4,
		GLSL_KW_bvec2,
		GLSL_KW_bvec3,
		GLSL_KW_bvec4,
		GLSL_KW_dvec2,
		GLSL_KW_dvec3,
		GLSL_KW_dvec4,
		GLSL_KW_uint,
		GLSL_KW_uvec2,
		GLSL_KW_uvec3,
		GLSL_KW_uvec4,
		GLSL_KW_lowp,
		GLSL_KW_mediump,
		GLSL_KW_highp,
		GLSL_KW_precision,
		GLSL_KW_sampler1D,
		GLSL_KW_sampler2D,
		GLSL_KW_sampler3D,
		GLSL_KW_samplerCube,
		GLSL_KW_sampler1DShadow,
		GLSL_KW_sampler2DShadow,
		GLSL_KW_samplerCubeShadow,
		GLSL_KW_sampler1DArray,
		GLSL_KW_sampler2DArray,
		GLSL_KW_sampler1DArrayShadow,
		GLSL_KW_sampler2DArrayShadow,
		GLSL_KW_isampler1D,
		GLSL_KW_isampler2D,
		GLSL_KW_isampler3D,
		GLSL_KW_isamplerCube,
		GLSL_KW_isampler1DArray,
		GLSL_KW_isampler2DArray,
		GLSL_KW_usampler1D,
		GLSL_KW_usampler2D,
		GLSL_KW_usampler3D,
		GLSL_KW_usamplerCube,
		GLSL_KW_usampler1DArray,
		GLSL_KW_usampler2DArray,
		GLSL_KW_sampler2DRect,
		GLSL_KW_sampler2DRectShadow,
		GLSL_KW_isampler2DRect,
		GLSL_KW_usampler2DRect,
		GLSL_KW_samplerBuffer,
		GLSL_KW_isamplerBuffer,
		GLSL_KW_usamplerBuffer,
		GLSL_KW_sampler2DMS,
		GLSL_KW_isampler2DMS,
		GLSL_KW_usampler2DMS,
		GLSL_KW_sampler2DMSArray,
		GLSL_KW_isampler2DMSArray,
		GLSL_KW_usampler2DMSArray,
		GLSL_KW_samplerCubeArray,
		GLSL_KW_samplerCubeArrayShadow,
		GLSL_KW_isamplerCubeArray,
		GLSL_KW_usamplerCubeArray,
		GLSL_KW_struct,
		GLSL_KW_common,
		GLSL_KW_partition,
		GLSL_KW_active,
		GLSL_KW_asm,
		GLSL_KW_class,
		GLSL_KW_union,
		GLSL_KW_enum,
		GLSL_KW_typedef,
		GLSL_KW_template,
		GLSL_KW_this,
		GLSL_KW_packed,
		GLSL_KW_vgoto,
		GLSL_KW_inline,
		GLSL_KW_noinline,
		GLSL_KW_volatile,
		GLSL_KW_public,
		GLSL_KW_static,
		GLSL_KW_extern,
		GLSL_KW_external,
		GLSL_KW_interface,
		GLSL_KW_long,
		GLSL_KW_short,
		GLSL_KW_half,
		GLSL_KW_fixed,
		GLSL_KW_unsigned,
		GLSL_KW_superp,
		GLSL_KW_input,
		GLSL_KW_output,
		GLSL_KW_hvec2,
		GLSL_KW_hvec3,
		GLSL_KW_hvec4,
		GLSL_KW_fvec2,
		GLSL_KW_fvec3,
		GLSL_KW_fvec4,
		GLSL_KW_sampler3DRect,
		GLSL_KW_filter,
		GLSL_KW_image1D,
		GLSL_KW_image2D,
		GLSL_KW_image3D,
		GLSL_KW_imageCube,
		GLSL_KW_iimage1D,
		GLSL_KW_iimage2D,
		GLSL_KW_iimage3D,
		GLSL_KW_iimageCube,
		GLSL_KW_uimage1D,
		GLSL_KW_uimage2D,
		GLSL_KW_uimage3D,
		GLSL_KW_uimageCube,
		GLSL_KW_image1DArray,
		GLSL_KW_image2DArray,
		GLSL_KW_iimage1DArray,
		GLSL_KW_iimage2DArray,
		GLSL_KW_uimage1DArray,
		GLSL_KW_uimage2DArray,
		GLSL_KW_image1DShadow,
		GLSL_KW_image2DShadow,
		GLSL_KW_image1DArrayShadow,
		GLSL_KW_image2DArrayShadow,
		GLSL_KW_imageBuffer,
		GLSL_KW_iimageBuffer,
		GLSL_KW_uimageBuffer,
		GLSL_KW_sizeof,
		GLSL_KW_cast,
		GLSL_KW_namespace,
		GLSL_KW_using,
		GLSL_KW_row_major, // 185 lines
		GLSL_KW_END
	};

	extern const char* GLSLKeyword[];

	enum GLSL_FUNCTIONS
	{
		GLSL_FN_abs,
		GLSL_FN_acos,
		GLSL_FN_acosh,
		GLSL_FN_all,
		GLSL_FN_any,
		GLSL_FN_asin,
		GLSL_FN_asinh,
		GLSL_FN_atan,
		GLSL_FN_atanh,
		GLSL_FN_atomicAdd,
		GLSL_FN_atomicAnd,
		GLSL_FN_atomicCompSwap,
		GLSL_FN_atomicCounter,
		GLSL_FN_atomicCounterDecrement,
		GLSL_FN_atomicCounterIncrement,
		GLSL_FN_atomicExchange,
		GLSL_FN_atomicMax,
		GLSL_FN_atomicMin,
		GLSL_FN_atomicOr,
		GLSL_FN_atomicXor,
		GLSL_FN_barrier,
		GLSL_FN_bitCount,
		GLSL_FN_bitfieldExtract,
		GLSL_FN_bitfieldInsert,
		GLSL_FN_bitfieldReverse,
		GLSL_FN_ceil,
		GLSL_FN_clamp,
		GLSL_FN_cos,
		GLSL_FN_cosh,
		GLSL_FN_cross,
		GLSL_FN_degrees,
		GLSL_FN_determinant,
		GLSL_FN_dFdx,
		GLSL_FN_dFdy,
		GLSL_FN_distance,
		GLSL_FN_dot,
		GLSL_FN_EmitStreamVertex,
		GLSL_FN_EmitVertex,
		GLSL_FN_EndPrimitive,
		GLSL_FN_EndStreamPrimitive,
		GLSL_FN_equal,
		GLSL_FN_exp,
		GLSL_FN_exp2,
		GLSL_FN_faceforward,
		GLSL_FN_findLSB,
		GLSL_FN_findMSB,
		GLSL_FN_floatBitsToInt,
		GLSL_FN_floatBitsToUint,
		GLSL_FN_floor,
		GLSL_FN_fma,
		GLSL_FN_fract,
		GLSL_FN_frexp,
		GLSL_FN_fwidth,
		GLSL_FN_greaterThan,
		GLSL_FN_greaterThanEqual,
		GLSL_FN_groupMemoryBarrier,
		GLSL_FN_imageAtomicAdd,
		GLSL_FN_imageAtomicAnd,
		GLSL_FN_imageAtomicCompSwap,
		GLSL_FN_imageAtomicExchange,
		GLSL_FN_imageAtomicMax,
		GLSL_FN_imageAtomicMin,
		GLSL_FN_imageAtomicOr,
		GLSL_FN_imageAtomicXor,
		GLSL_FN_imageLoad,
		GLSL_FN_imageSize,
		GLSL_FN_imageStore,
		GLSL_FN_imulExtended,
		GLSL_FN_intBitsToFloat,
		GLSL_FN_interpolateAtCentroid,
		GLSL_FN_interpolateAtOffset,
		GLSL_FN_interpolateAtSample,
		GLSL_FN_inverse,
		GLSL_FN_inversesqrt,
		GLSL_FN_isinf,
		GLSL_FN_isnan,
		GLSL_FN_ldexp,
		GLSL_FN_length,
		GLSL_FN_lessThan,
		GLSL_FN_lessThanEqual,
		GLSL_FN_log,
		GLSL_FN_log2,
		GLSL_FN_matrixCompMult,
		GLSL_FN_max,
		GLSL_FN_memoryBarrier,
		GLSL_FN_memoryBarrierAtomicCounter,
		GLSL_FN_memoryBarrierBuffer,
		GLSL_FN_memoryBarrierImage,
		GLSL_FN_memoryBarrierShared,
		GLSL_FN_min,
		GLSL_FN_mix,
		GLSL_FN_mod,
		GLSL_FN_modf,
		GLSL_FN_noise,
		GLSL_FN_normalize,
		GLSL_FN_not,
		GLSL_FN_notEqual,
		GLSL_FN_outerProduct,
		GLSL_FN_packDouble2x32,
		GLSL_FN_packHalf2x16,
		GLSL_FN_packSnorm2x16,
		GLSL_FN_packSnorm4x8,
		GLSL_FN_packUnorm2x16,
		GLSL_FN_packUnorm4x8,
		GLSL_FN_pow,
		GLSL_FN_radians,
		GLSL_FN_reflect,
		GLSL_FN_refract,
		GLSL_FN_round,
		GLSL_FN_roundEven,
		GLSL_FN_sign,
		GLSL_FN_sin,
		GLSL_FN_sinh,
		GLSL_FN_smoothstep,
		GLSL_FN_sqrt,
		GLSL_FN_step,
		GLSL_FN_tan,
		GLSL_FN_tanh,
		GLSL_FN_texelFetch,
		GLSL_FN_texelFetchOffset,
		GLSL_FN_texture,
		GLSL_FN_textureGather,
		GLSL_FN_textureGatherOffset,
		GLSL_FN_textureGatherOffsets,
		GLSL_FN_textureGrad,
		GLSL_FN_textureGradOffset,
		GLSL_FN_textureLod,
		GLSL_FN_textureLodOffset,
		GLSL_FN_textureOffset,
		GLSL_FN_textureProj,
		GLSL_FN_textureProjGrad,
		GLSL_FN_textureProjGradOffset,
		GLSL_FN_textureProjLod,
		GLSL_FN_textureProjLodOffset,
		GLSL_FN_textureProjOffset,
		GLSL_FN_textureQueryLevels,
		GLSL_FN_textureQueryLod,
		GLSL_FN_textureSize,
		GLSL_FN_transpose,
		GLSL_FN_trunc,
		GLSL_FN_uaddCarry,
		GLSL_FN_uintBitsToFloat,
		GLSL_FN_umulExtended,
		GLSL_FN_unpackDouble2x32,
		GLSL_FN_unpackHalf2x16,
		GLSL_FN_unpackSnorm2x16,
		GLSL_FN_unpackSnorm4x8,
		GLSL_FN_unpackUnorm2x16,
		GLSL_FN_unpackUnorm4x8,
		GLSL_FN_usubBorrow,
		GLSL_FN_gl_ClipDistance,
		GLSL_FN_gl_FragCoord,
		GLSL_FN_gl_FragDepth,
		GLSL_FN_gl_FrontFacing,
		GLSL_FN_gl_GlobalInvocationID,
		GLSL_FN_gl_InstanceID,
		GLSL_FN_gl_InvocationID,
		GLSL_FN_gl_Layer,
		GLSL_FN_gl_LocalInvocationID,
		GLSL_FN_gl_LocalInvocationIndex,
		GLSL_FN_gl_NumSamples,
		GLSL_FN_gl_NumWorkGroups,
		GLSL_FN_gl_PatchVerticesIn,
		GLSL_FN_gl_PointCoord,
		GLSL_FN_gl_PointSize,
		GLSL_FN_gl_Position,
		GLSL_FN_gl_PrimitiveID,
		GLSL_FN_gl_PrimitiveIDIn,
		GLSL_FN_gl_SampleID,
		GLSL_FN_gl_SampleMask,
		GLSL_FN_gl_SampleMaskIn,
		GLSL_FN_gl_SamplePosition,
		GLSL_FN_gl_TessCoord,
		GLSL_FN_gl_TessLevelInner,
		GLSL_FN_gl_TessLevelOuter,
		GLSL_FN_gl_VertexID,
		GLSL_FN_gl_ViewportIndex,
		GLSL_FN_gl_WorkGroupID,
		GLSL_FN_gl_WorkGroupSize,
		GLSL_FN_END
	};

	extern const char* GLSLFunction[];

	enum GLIP_KEYWORD
	{
		GLIP_KW_TEXTURE_FORMAT, 
		GLIP_KW_REQUIRED_FORMAT, 
		GLIP_KW_SHADER_SOURCE, 
		GLIP_KW_FILTER_LAYOUT, 
		GLIP_KW_PIPELINE_LAYOUT, 
		GLIP_KW_INPUT_PORTS, 
		GLIP_KW_OUTPUT_PORTS, 
		GLIP_KW_FILTER_INSTANCE, 
		GLIP_KW_PIPELINE_INSTANCE, 
		GLIP_KW_PIPELINE_MAIN,
		GLIP_KW_CONNECTION, 
		GLIP_KW_REQUIRED_PIPELINE, 
		GLIP_KW_INCLUDE_FILE, 
		GLIP_KW_SHARED_CODE, 
		GLIP_KW_INSERT_SHARED_CODE,
		GLIP_KW_END
	};

	extern const char* GLIPKeyword[];

#endif 

