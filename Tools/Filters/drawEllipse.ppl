/*
	Draw an ellipse of variable size, position and color onto the image.
*/

REQUIRED_FORMAT:outputFormat(inputFormat0)
CALL:FORMAT_TO_CONSTANT(outputFormat)

SOURCE:drawEllipseShader
{
	#version 130
	
	uniform sampler2D inputTexture;
	out vec4 outputTexture;
	uniform vec2 	center		= vec2(0.0f,0.0f),
			radii		= vec2(1.0f,1.0f);
	uniform float	thickness	= 0.02f;
	uniform vec3	color 		= vec3(1.0f, 0.0f, 0.0f);
	
	#pragma INSERT(outputFormat)

	void main()
	{
		// Read the base level of the texture at the current position : 
		vec4 col = textureLod(inputTexture, gl_FragCoord.xy/vec2(outputFormat), 0);
		vec2	v	= gl_FragCoord.xy-center;
			v.x	/= radii.x;
			v.y	/= radii.y;
		float 	val 	= length(v);

		if(val<=1.0f && val+thickness>=1.0f)
			col.rgb = color;

		outputTexture = col;
	}
}

FILTER_LAYOUT:drawEllipseFilter(outputFormat, drawEllipseShader)

PIPELINE_MAIN:drawEllipsePipeline
{
	INPUT_PORTS(inputTexture)
	OUTPUT_PORTS(outputTexture)

	FILTER_INSTANCE:drawEllipseFilter
}

