/**
\page page13_ToolGlipStudio Tool : GlipStudio

\section section_glipStudioIntro GlipStudio
GlipStudio is a small IDE for GLIP-Lib : load images and prototype quickly pipelines, filters and profiles in the editor and the uniform variables manager. Once the pipelines are saved to the disk, you can use them in applications based on GLIP-Lib.

\section section_getGlipStudio Get GlipStudio 
In order to use GlipStudio, you can get it from the following sources : 

- <b>Binaries for Windows (64 bits) : http://sourceforge.net/projects/glip-lib/files/GlipStudio_x64_win.zip/download</b>

- Get from source (Linux/Windows, (32/64 bits)) : clone git repository at http://sourceforge.net/p/glip-lib/code/ci/master/tree/ (for Windows user, you can use this tool : http://git-scm.com/downloads).
	
Building the code, what is needed : 
	
- Linux : GCC 4.6+, CMake, Qt SDK.

- Windows : Visual Studio (Express) 2012, Qt SDK (with OpenGL support <i>"Qt 5.1.0 for Windows (VS 2012, OpenGL)"</i>, can be downloaded at http://qt-project.org/downloads).

<b>Build steps on Linux :</b> 

- In directory <i>GLIP-Lib/</i>, run script file <i>compile.sh</i> or CMake generation :
	\code cmake . -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=Release \endcode

- In directory <i>Examples/GlipStudio/</i>, run usual build procedure for Qt application : 
	\code qmake && make -j \endcode
	
<b>Build steps on Windows :</b>

- Open project file in <i>Project_VS/GLIP-Lib/</i> with Visual Studio. Include 'GLIP-Lib/include/' in search path and choose the target compilation (32/64 bits, release). Build the project.

- With Qt Creator, open project file in <i>Examples/GlipStudio/</i> (<i>Examples/GlipStudio/GlipStudio.pro</i>). Set the target to release and build the project.

\section section_UsingGlipStudio Using Glip Studio

How to use <b>GlipStudio</b> : 
- <b>Load images</b> : in the lower pane, in the <b>Resources</b> tab, click the <b>Image</b> menu, then <b>Load image...</b>. Choose the images to load in the dialog box. Once loaded they appear in the <b>Images</b> section with their names, resolutions, GL modes, and filtering. Click on a line to display the corresponding image in the <b>Display Window</b>.
- <b>Load a pipeline</b> : in the right pane, in the <b>File</b> menu, choose <b>Open</b>. The application is distributed with several examples in the directory <i>Filters</i> (PPL files). For instance, load pipeline <i>changeHSL_HSV.ppl</i>, its source code will appear in a new tab. Do no modify the code for the moment, and click <b>Refresh | Compile</b> in the menu bar. The pipeline is created and its inputs and outputs are now listed in the Resource manager (<b>Resources</b> tab in the lower pane). In this manager, select one image from the <b>Images</b> section and connect it as the input of the pipeline : click the <b>Connect</b> menu and choose the unique input available. Note that the input size as changed and this particular pipeline must be refreshed every time this happens : click <b>Refresh | Compile</b> in the menu bar of the editor (or press <b><i>F5</i></b> or <b><i>Ctrl+r</i></b> on your keyboard). Select the first output or second output image, they should display almost identical images than the input.
- <b>Modify uniform variables</b> : without recompiling the program, you are allowed to modify variables dynamically. Go in the <b>Uniforms</b> tab, and modify the values in the boxes (<b><i>hint</i></b> : you can let your mouse over a box a use your mouse wheel or trackpad virtual wheel in order to modify the values more smoothly).
- <b>Save uniform variables</b> : if you were to recompile the pipeline after a modification of the code, you would loose the current settings in the <i>uniform</i> variables. In order to avoid this problem, go in the <b>Uniforms</b> tab, and, from here, you can save to a file. This is time costly for numerous modification, so you can use the <b>Main Library</b> menu from which you will be able to quickly save and load one profile per Pipeline.
- <b>Save the output</b> : you can save the output of a pipeline either in memory as a duplicate or to the disk. Go in the <b>Resources</b> tab, select the output, click the <b>Image</b> menu and choose <b>Copy as new resource...</b> for a in-memory copy (you will be ask for a name for the new resource) or choose <b>Save output as...</b> to save the image to the disk (in JPEG, PNG, BMP, PPM, etc.).

Visualization commands, select the visualization window (containing the image) by clicking it first : 
<CENTER>
Command       					| Designation
----------------------------------------------- | --------------------------
Escape 						| Escape fullscreen mode
Directional arrows  				| Translation
Return  					| Toggle fullscreen on/off 
Space 						| Reset transformation
+/- 						| Zoom in / out
f/d 						| Rotate left / right
Left click and drag 				| Translation
Right click and drag 				| Rotation
Holding Control key + left click and drag 	| Rotation
Double left click 				| Toggle fullscreen on/off 
Double right click 				| Reset transformation
Mouse wheel 					| Zoom in / out
</CENTER>

\section section_Captures Screenshots
	<img src="./images/glipstudio_1.png" width="1024" />
	<BR>
	<img src="./images/glipstudio_2.png" width="1024" />
	<BR>
	<img src="./images/glipstudio_3.png" width="1024" />
	<BR>
	<img src="./images/glipstudio_4.png" width="1024" />
	
**/
